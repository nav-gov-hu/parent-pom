# It compiles the project using Maven and deploys SNAPSHOT artifacts
name: (WF) Maven Deploy SNAPSHOT

on:
  workflow_call:
    inputs:
      java-version:
        required: false
        type: string
        default: '21'
        description: 'Java version to use for the job'
      deploy-maven-cmd:
        required: false
        type: string
        default: 'mvn -B deploy'
        description: 'Maven command to run for deployment'

jobs:
  deploy-snapshot:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java-version }}
        distribution: 'temurin'
        # ID of the distributionManagement repository in the pom.xml file. Default is github.
        server-id: central
        # Environment variable name for the username for authentication to the Apache Maven repository. Default is GITHUB_ACTOR.
        server-username: MAVEN_USERNAME
        # Environment variable name for password or token for authentication to the Apache Maven repository. Default is GITHUB_TOKEN.
        server-password: MAVEN_PASSWORD
        # Maven related setting to point to the directory where the settings.xml file will be written. Default is ~/.m2.
        # settings-path: ${{ github.workspace }}
        # Value of the GPG private key to import
        gpg-private-key: ${{ secrets.TECHUSER_GPG_PRIVATE_KEY }}
        # Quick setup caching for the dependencies managed through one of the predefined package managers. It can be one of "maven", "gradle" or "sbt".
        gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
        cache: 'maven'

    - name: Build with Maven
      run: mvn -B package

    - name: Publish packages
      run: ${{ inputs.deploy-maven-cmd }}
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USER_USERNAME }}
        MAVEN_PASSWORD: '${{ secrets.MAVEN_CENTRAL_USER_PASSWORD }}'
        MAVEN_GPG_PASSPHRASE: ''
